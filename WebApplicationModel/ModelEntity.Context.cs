//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplicationModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Db_Entities : DbContext
    {
        public Db_Entities()
            : base("name=Db_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Avisos> Avisos { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Documento> Documento { get; set; }
        public virtual DbSet<Finiquito> Finiquito { get; set; }
        public virtual DbSet<Ingresos> Ingresos { get; set; }
        public virtual DbSet<Novedad> Novedad { get; set; }
        public virtual DbSet<Otra_solicitud> Otra_solicitud { get; set; }
        public virtual DbSet<parametros> parametros { get; set; }
        public virtual DbSet<Periodo_liquidaciones> Periodo_liquidaciones { get; set; }
        public virtual DbSet<Remuneracion> Remuneracion { get; set; }
        public virtual DbSet<Tipo_novedad> Tipo_novedad { get; set; }
        public virtual DbSet<tipo_usu> tipo_usu { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Vacaciones> Vacaciones { get; set; }
        public virtual DbSet<ConfigPDF> ConfigPDF { get; set; }
        public virtual DbSet<Periodos> Periodos { get; set; }
        public virtual DbSet<Permisos> Permisos { get; set; }
        public virtual DbSet<ViewOtraSolicitud> ViewOtraSolicitud { get; set; }
    
        [DbFunction("Db_Entities", "fn_subordinadosPorUsuario")]
        public virtual IQueryable<fn_subordinadosPorUsuario_Result> fn_subordinadosPorUsuario(string usuario, Nullable<int> nivel)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var nivelParameter = nivel.HasValue ?
                new ObjectParameter("Nivel", nivel) :
                new ObjectParameter("Nivel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_subordinadosPorUsuario_Result>("[Db_Entities].[fn_subordinadosPorUsuario](@Usuario, @Nivel)", usuarioParameter, nivelParameter);
        }
    
        public virtual int pa_selDatosCertAntiguedad(string uSU_ID, string nOM_CLIENTE_DB)
        {
            var uSU_IDParameter = uSU_ID != null ?
                new ObjectParameter("USU_ID", uSU_ID) :
                new ObjectParameter("USU_ID", typeof(string));
    
            var nOM_CLIENTE_DBParameter = nOM_CLIENTE_DB != null ?
                new ObjectParameter("NOM_CLIENTE_DB", nOM_CLIENTE_DB) :
                new ObjectParameter("NOM_CLIENTE_DB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_selDatosCertAntiguedad", uSU_IDParameter, nOM_CLIENTE_DBParameter);
        }
    
        public virtual int pa_selDatosLiquidacion(string uSU_ID, string nOM_CLIENTE_DB, string mes_consul)
        {
            var uSU_IDParameter = uSU_ID != null ?
                new ObjectParameter("USU_ID", uSU_ID) :
                new ObjectParameter("USU_ID", typeof(string));
    
            var nOM_CLIENTE_DBParameter = nOM_CLIENTE_DB != null ?
                new ObjectParameter("NOM_CLIENTE_DB", nOM_CLIENTE_DB) :
                new ObjectParameter("NOM_CLIENTE_DB", typeof(string));
    
            var mes_consulParameter = mes_consul != null ?
                new ObjectParameter("Mes_consul", mes_consul) :
                new ObjectParameter("Mes_consul", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pa_selDatosLiquidacion", uSU_IDParameter, nOM_CLIENTE_DBParameter, mes_consulParameter);
        }
    
        public virtual int sp_selPeriodoUsuario(Nullable<System.DateTime> fecha, string nOM_CLIENTE_DB, ObjectParameter vALOR_RET)
        {
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var nOM_CLIENTE_DBParameter = nOM_CLIENTE_DB != null ?
                new ObjectParameter("NOM_CLIENTE_DB", nOM_CLIENTE_DB) :
                new ObjectParameter("NOM_CLIENTE_DB", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_selPeriodoUsuario", fechaParameter, nOM_CLIENTE_DBParameter, vALOR_RET);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
