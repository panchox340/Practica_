@model WebApplicationModel.Ingresos
@using WebApplication.App_GlobalResources
@using WebApplication.Extensions
<style>
.fuente {
        color:white;
    }
</style>


@using (Html.BeginForm((Model == null ? "Create" : "Edit"), "Altas", FormMethod.Post, new { @id = "mant-form", @novalidate = "novalidate", role = "form" }))
{
    <div class="box-header with-border" style="background-color:#dd4b39;">
        <h3 class="box-title fuente">Formulario Ingreso Personal</h3>
        <span></span><button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    </div>

    @Html.AntiForgeryToken()
    @(Model == null ? new MvcHtmlString("") : Html.HiddenFor(p => p.id_ing))
    @(Model == null ? new MvcHtmlString("") : Html.HiddenFor(c => c.id_novedad))
    


    <div class="">
        <div class="box-body">
            <ul id="myTab1" class="nav nav-tabs bordered cabecera_tab modal-body box-body">
                <li class="active"><a href="#s1" data-toggle="tab" aria-expanded="false" id="cabecera_tab1" style="color:black;">Datos Personales </a></li>
                <li class=""><a href="#s2" data-toggle="tab" aria-expanded="true" id="cabecera_tab2" style="color:black;">Datos Afiliaciones </a></li>
                <li class=""><a href="#s3" data-toggle="tab" aria-expanded="true" id="cabecera_tab2" style="color:black;">Archivo Adjunto </a></li>
            </ul>

            <div id="myTabContent1" class="tab-content formcolor" style="padding:20px;">
                <div class="tab-pane fade active in form-group" id="s1">
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon3">Nombre</span>
                        @Html.TextBoxFor(model => model.nombres, new { type = "text", @class = "form-control", placeholder = "" })
               
                        <span class="input-group-addon" id="basic-addon3">Apellidos</span>
                        @Html.TextBoxFor(model => model.apellido, new { type = "text", @class = "form-control", placeholder = "" })
                    </div>
                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon3">Rut</span>
                        @Html.TextBoxFor(model => model.rut, new { type = "text", @class = "form-control", placeholder = "" })
                   
                        <span class="input-group-addon" id="basic-addon3">Nacionalidad</span>
                        @Html.TextBoxFor(model => model.nacionalidad, new { type = "text", @class = "form-control", placeholder = "" })
                    </div>
                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon3">Fecha Nacimiento</span>
                        @Html.TextBoxFor(model => model.fecha_nacimiento, new { type = "date", @class = "form-control", placeholder = "" })
                    </div>
                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon3">Estado Civil</span>
                        @Html.TextBoxFor(model => model.estado_civil, new { type = "text", @class = "form-control", placeholder = "" })
                    </div>
                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon3">Email</span>
                        @Html.TextBoxFor(model => model.mail, new { type = "email", @class = "form-control", placeholder = "" })
                    </div>
                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon3">Dirección</span>
                        @Html.TextBoxFor(model => model.direccion, new { type = "text", @class = "form-control", placeholder = "" })
                    </div>
                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon3">Telefono</span>
                        @Html.TextBoxFor(model => model.telefono, new { type = "text", @class = "form-control", placeholder = "" })
                    </div>
                    </div>

                <div class="tab-pane fade  in form-group" id="s2">
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon3">Isapre</span>
                        @Html.TextBoxFor(model => model.isapre, new { type = "text", @class = "form-control", placeholder = "" })
                    </div>
                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon3">AFP</span>
                        @Html.TextBoxFor(model => model.AFP, new { type = "text", @class = "form-control", placeholder = "" })
                    </div>
                    <br />
                    <div class="input-group">
                        <span class="input-group-addon" id="basic-addon3">Fonasa</span>
                        @Html.TextBoxFor(model => model.Fonasa, new { type = "text", @class = "form-control", placeholder = "" })
                    </div>
                </div>

                <div class="tab-pane fade in form-group" id="s3">
                    <div class="archive">
                        <input type="file" name="files" class="uploadfile" />
                        @Html.DropDownList("documento", (SelectList)ViewBag.selectlistdocus," ", new { @class = "form-control docu" })
                    </div>   
                    <br />
                    <div class="archive">
                        <input type="file" name="files" class="uploadfile" />
                        @Html.DropDownList("documento", (SelectList)ViewBag.selectlistdocus, " ", new { @class = "form-control docu"  })
                    </div> 
                    <br />
                    <div class="archive">
                        <input type="file" name="files" class="uploadfile" />
                        @Html.DropDownList("documento", (SelectList)ViewBag.selectlistdocus, " ", new { @class = "form-control docu" })
                    </div>
                    <br />
                    <div class="archive">
                        <input type="file" name="files" class="uploadfile" />
                        @Html.DropDownList("documento", (SelectList)ViewBag.selectlistdocus, " ", new { @class = "form-control docu" })
                    </div>
                    <br/>
                    <div class="archive">
                        <input type="file" name="files" class="uploadfile" />
                        @Html.DropDownList("documento", (SelectList)ViewBag.selectlistdocus, " ", new { @class = "form-control docu" })
                    </div>
                    <br />
                    <div class="archive">
                        <input type="file" name="files" class="uploadfile" />
                        @Html.DropDownList("documento", (SelectList)ViewBag.selectlistdocus, " ", new { @class = "form-control docu" })
                    </div>
                </div>
            </div>
        </div>
    </div>       
    <!-- /.box-body -->

    <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">@Pay_Lenguaje.cerrar</button>
        <button type="button" class="btn btn-danger" action="save">@Pay_Lenguaje.guardar_cambios</button>
    </div>
}
<script>
    setFormulario(
        "mant-form",
        {
            Nombre: { required: true },
            apellidos: { required: true },
            rut: { required: true },
            Nacionalidad: { required: true },
            fecha_nacimiento: { required: true },
            direccion: { required: true },
            Estado_Civil: { required: true },
            mail: { required: true },
            Telefono: { required: false },
            Isapre: { required: false },
            AFP: { required: false },
            Fonasa: { required: false },
        },
        {
            Nombre: { required: '<span class="help-block error" ><i class="fa fa-warning"></i> Ingrese Nombre valido</span> ' },
            apellidos: { required: '<span class="help-block error" ><i class="fa fa-warning"></i> Ingrese apellido valido</span> ' },
            rut: { required: '<span class="help-block error" ><i class="fa fa-warning"></i> Ingrese rut valido</span> ' },
            Nacionalidad: { required: '<span class="help-block error" ><i class="fa fa-warning"></i> Ingrese Nacionalidad valida</span> ' },
            fecha_nacimiento: { required: '<span class="help-block error" ><i class="fa fa-warning"></i> Ingrese fecha nacimiento valida</span> ' },
            direccion: { required: '<span class="help-block error" ><i class="fa fa-warning"></i> Ingrese direccion valida</span> ' },
            Estado_Civil: { required: '<span class="help-block error" ><i class="fa fa-warning"></i> Ingrese Estado Civil valido</span> ' },
            mail: { required: '<span class="help-block error" ><i class="fa fa-warning"></i> Ingrese Email valido</span> ' },
        }
    );

    $('#rut').mask('00.000.000-0', { reverse: true });


    var titulo = [];
    var detalle = [];
    var lista = [{
        index: "",
        tit: "",
        det: ""
    }];

    $("#rut").rut().on('rutInvalido', function (e) {
        alert("El rut " + $(this).val() + " es inválido");
        $("button[action=save]").prop('disabled', true);
    });

    $("#rut").rut().on('rutValido', function (e) {
        $("button[action=save]").prop('disabled', false);
    });

    var docu = "";
    var det = "";

    $(".archive").on('change', function () {
        docu = $(this).find(".file-caption-name").text();
        det = $(this).find(".docu").val();
        console.log(docu + " " + det);
        if (docu == '' || det == '') {
            $("button[action=save]").prop('disabled', true);
        } else {
            $("button[action=save]").prop('disabled', false);
        }
    });

    $("button[action=save]").click(function () {
        $(".file-caption-name").each(function (index) {
            titulo[index] = $(this).prop("title");
        });
        $(".docu").each(function (index) {
            detalle[index] = $(this).val();
        });
        for (var i in titulo) {
            lista.push({
                index: i,
                tit: titulo[i],
                det: detalle[i]
            });
        }
    });


    $(".uploadfile").fileinput({
        showPreview: false,
        showCancel: true,
        showUpload: false,
        browseClass: 'btn btn-warning',
        browseLabel: "Seleccione Documento",
        browseIcon: "<span class='glyphicon glyphicon-open-file' aria-hidden='true'></span>",
        removeClass: "btn btn-danger",
        removeLabel: "Delete",
        removeIcon: "<i class=\"glyphicon glyphicon-trash\"></i>",
        showCancel: true,
        uploadExtraData: function () {
            return {
                documento: JSON.stringify(lista)
            };
        }
    });

</script>


